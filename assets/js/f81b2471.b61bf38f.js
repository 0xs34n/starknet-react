"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[658],{8044:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(8855);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=s(r),d=a,m=f["".concat(l,".").concat(d)]||f[d]||p[d]||o;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7401:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return p}});var n=r(1528),a=r(2854),o=(r(8855),r(8044)),i=["components"],c={sidebar_position:4},l="useStarknetCall",s={unversionedId:"hooks/call",id:"hooks/call",title:"useStarknetCall",description:"Hook to fetch data from a StarkNet contract. The data is automatically refreshed at every block.",source:"@site/docs/hooks/call.md",sourceDirName:"hooks",slug:"/hooks/call",permalink:"/starknet-react/hooks/call",draft:!1,editUrl:"https://github.com/apibara/starknet-react/tree/main/website/docs/hooks/call.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"useContract",permalink:"/starknet-react/hooks/contract"},next:{title:"useStarknetExecute",permalink:"/starknet-react/hooks/execute"}},u={},p=[{value:"Parameters",id:"parameters",level:2},{value:"Return Values",id:"return-values",level:2}],f={toc:p};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usestarknetcall"},"useStarknetCall"),(0,o.kt)("p",null,"Hook to fetch data from a StarkNet contract. The data is automatically refreshed at every block."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { useStarknetCall } from '@starknet-react/core'\n\nconst { data, loading, error, refresh } = useStarknetCall({ contract, method, args })\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  contract?: Contract\n  method?: string\n  args?: T\n  options?: {\n    watch?: boolean,\n    blockIdentifier?: BlockIdentifier\n  }\n}\n")),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"options.watch")," (default: ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),") is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),", the hook will fetch the\ncontract value only once.\nIf ",(0,o.kt)("inlineCode",{parentName:"p"},"options.blockIdentifier")," (default: ",(0,o.kt)("inlineCode",{parentName:"p"},"pending"),") is set, it is passed to the feeder gateway in the ",(0,o.kt)("inlineCode",{parentName:"p"},"call_contract")," method."),(0,o.kt)("h2",{id:"return-values"},"Return Values"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  data?: Array<any>\n  loading: boolean\n  error?: string\n  refresh: () => void\n}\n")))}d.isMDXComponent=!0}}]);