"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[671],{4330:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return k}});var r=n(8855);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),k=a,m=d["".concat(s,".").concat(k)]||d[k]||u[k]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5172:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var r=n(1528),a=n(2854),o=(n(8855),n(4330)),i=["components"],c={sidebar_position:1,slug:"/"},s="StarkNet React",l={unversionedId:"intro",id:"intro",title:"StarkNet React",description:"StarkNet React is a collection of React hooks for StarkNet. It is inspired by",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/starknet-react/",draft:!1,editUrl:"https://github.com/apibara/starknet-react/tree/main/website/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/"},sidebar:"tutorialSidebar",next:{title:"StarkNet React Demo",permalink:"/starknet-react/demo"}},p={},u=[{value:"Getting Started",id:"getting-started",level:2},{value:"Customizing the default provider",id:"customizing-the-default-provider",level:2},{value:"Support and Feedback",id:"support-and-feedback",level:2},{value:"License",id:"license",level:2}],d={toc:u};function k(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"starknet-react"},"StarkNet React"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"StarkNet React")," is a collection of React hooks for StarkNet. It is inspired by\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tmm/wagmi"},"wagmi"),", powered by ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/0xs34n/starknet.js"},"starknet.js"),"."),(0,o.kt)("h2",{id:"getting-started"},"Getting Started"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add ",(0,o.kt)("inlineCode",{parentName:"li"},"@starknet-react/core"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"get-starknet")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"starknet")," to your dependencies.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn add @starknet-react/core get-starknet starknet\n")),(0,o.kt)("p",null,"Or with npm:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npm install @starknet-react/core get-starknet starknet\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Wrap your app with ",(0,o.kt)("inlineCode",{parentName:"li"},"StarknetProvider"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { StarknetProvider, InjectedConnector } from '@starknet-react/core'\n\nfunction App() {\n  return (\n    <StarknetProvider connectors={[new InjectedConnector()]}>\n      <YourApp />\n    </StarknetProvider>\n  )\n}\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Connect the wallet (needs StarkNet Wallet extension installed)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { useStarknet, InjectedConnector } from '@starknet-react/core'\n\nfunction YourComponent() {\n  const { connect, connectors } = useStarknet()\n  const injected = useMemo(() => new InjectedConnector(), [])\n  return (\n    <div>\n      {connectors.map((connector) =>\n        connector.available() ? (\n          <button key={connector.id()} onClick={() => connect(connector)}>\n            Connect {connector.name()}\n          </button>\n        ) : null\n      )}\n    </div>\n  )\n}\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Retrieve the account address")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { useStarknet } from '@starknet-react/core'\n\nfunction YourComponent() {\n  const { account } = useStarknet()\n\n  return <div>gm {account}</div>\n}\n")),(0,o.kt)("h2",{id:"customizing-the-default-provider"},"Customizing the default provider"),(0,o.kt)("p",null,"StarkNet React uses the provider provided by ",(0,o.kt)("inlineCode",{parentName:"p"},"get-starknet")," so that users can select\nthe current network from a familiar interface. When a StarkNet wallet is not connected,\nStarkNet React uses a ",(0,o.kt)("em",{parentName:"p"},"default provider"),". By default, the default provider is\nthe same as the default provider provided by starknet.js. Developers can customize\nthe default provider as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { StarknetProvider } from '@starknet-react/core'\nimport { Provider } from 'starknet'\n\nfunction App() {\n  return (\n    <StarknetProvider defaultProvider={new Provider({ baseUrl: 'http://localhost:500' })}>\n      <YourApp />\n    </StarknetProvider>\n  )\n}\n")),(0,o.kt)("h2",{id:"support-and-feedback"},"Support and Feedback"),(0,o.kt)("p",null,"If you need help or you want to provide feedback, ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apibara/starknet-react"},"create an issue or start a discussion\non GitHub"),"."),(0,o.kt)("h2",{id:"license"},"License"),(0,o.kt)("p",null,"This library is licensed under the MIT license."))}k.isMDXComponent=!0}}]);